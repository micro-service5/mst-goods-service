buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
        verifierVersion = '1.2.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.boxfuse.client:flyway-release:4.2.0")
        classpath('org.junit.platform:junit-platform-gradle-plugin:1.0.2')
        classpath("org.springframework.cloud:spring-cloud-contract-gradle-plugin:${verifierVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: "org.flywaydb.flyway"
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'org.springframework.boot'
apply plugin: 'spring-cloud-contract'

group = 'com.thoughtworks'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

ext {
    springCloudVersion = 'Edgware.RELEASE'
    junit5Version = "5.0.2"
    junitVintageVersion = "4.12.3"
    junitPlatformVersion = "1.0.2"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-consul-discovery')
    compile('org.springframework.cloud:spring-cloud-starter-feign')

    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('mysql:mysql-connector-java')
    compile('org.flywaydb:flyway-core:4.2.0')
    compile('redis.clients:jedis:2.9.0')

    compile('org.projectlombok:lombok:1.16.14')
    compile('io.jsonwebtoken:jjwt:0.7.0')
    compile('net.logstash.logback:logstash-logback-encoder:4.9')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile('org.junit.jupiter:junit-jupiter-api:5.0.2')
    testCompile('org.junit.jupiter:junit-jupiter-engine:5.0.2')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.0.2')
    testCompile('org.junit.platform:junit-platform-launcher:1.0.2')
    testCompile('org.junit.platform:junit-platform-runner:1.0.2')
    testCompile('com.github.sbrannen:spring-test-junit5:1.0.2')

    testCompile('com.h2database:h2:1.4.192')

    // verifier
    testCompile('org.springframework.cloud:spring-cloud-starter-contract-verifier')

    testCompile("org.junit.jupiter:junit-jupiter-api:${junit5Version}")
    testCompile("org.junit.jupiter:junit-jupiter-params:${junit5Version}")
    testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")
    testCompile("com.github.sbrannen:spring-test-junit5:${junitPlatformVersion}")

    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junit5Version}")

    // Make plugin discovery junit 4 based tests
    testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
}

contracts {
    packageWithBaseClasses = 'com.thoughtworks.mstorderservice.contract'
}
